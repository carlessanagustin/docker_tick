apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-ds
  namespace: tick
data:
  telegraf.conf: |+
    [agent]
      interval = "10s"
      round_interval = true
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_interval = "10s"
      flush_jitter = "0s"
      precision = ""
      # debug = true
      debug = false
      quiet = false
      logfile = ""
      hostname = "$HOSTNAME"
      omit_hostname = false
    [[outputs.influxdb]]
      # urls = ["http://influxdb.tick.svc.cluster.local:8086"]
      urls = ["https://influxdb:8086"]
      database = "telegraf"
      retention_policy = ""
      write_consistency = "any"
      timeout = "5s"
      insecure_skip_verify = true
    [[inputs.cpu]]
      percpu = true
      totalcpu = true
      collect_cpu_time = false
      report_active = false
    [[inputs.disk]]
      ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
    [[inputs.docker]]
      endpoint = "unix:///var/run/docker.sock"
      container_names = []
      timeout = "5s"
      perdevice = true
      total = false
    [[inputs.kubernetes]]
      # 127.0.0.1:38511     kubelet
      # 127.0.0.1:10248     kubelet
      # :::10250            kubelet
      # url = "http://$HOSTNAME:10255"
      url = "https://$HOSTNAME:10250"
      bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
      response_timeout = "5s"
      tls_ca = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      tls_cert = "/kubelet-client-current.pem"
      tls_key = "/kubelet-client-current.pem"
      insecure_skip_verify = true
    [[inputs.diskio]]
    [[inputs.mem]]
    [[inputs.processes]]
    [[inputs.system]]
    [[inputs.kernel]]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf-ds
  namespace: tick
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 3
  selector:
    matchLabels:
      app: telegraf
      type: ds
  template:
    metadata:
      labels:
        app: telegraf
        type: ds
    spec:
      containers:
      - name: telegraf
        image: telegraf:1.8
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "HOST_PROC"
          value: "/rootfs/proc"
        - name: "HOST_SYS"
          value: "/rootfs/sys"
        volumeMounts:
        - name: sys
          mountPath: /rootfs/sys
          readOnly: true
        - name: proc
          mountPath: /rootfs/proc
          readOnly: true
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: varrunutmp
          mountPath: /var/run/utmp
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config
          mountPath: /etc/telegraf
          readOnly: true
        - name: kubelet-client-pki
          mountPath: /kubelet-client-current.pem
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 500Mi
          limits:
            cpu: 200m
            memory: 500Mi
      volumes:
      - name: sys
        hostPath:
          path: /sys
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: proc
        hostPath:
          path: /proc
      - name: varrunutmp
        hostPath:
          path: /var/run/utmp
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          name: telegraf-ds
      - name: kubelet-client-pki
        hostPath:
          path: /var/lib/kubelet/pki/kubelet-client-current.pem
